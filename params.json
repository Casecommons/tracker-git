{"body":"# Tracker::Git\r\n\r\nUpdate Pivotal Tracker depending on your local Git repository. \r\n\r\nThis gem finds all finished stories and bugs and if it finds the story id in a Git commit, marks that story as delivery. \r\n\r\nThis has proved useful as part of a 'deploy to staging' strategy. If you automatically deploy to a staging environment after a successful continuous integration build, and want to update a story from 'finished' to 'delivered', then this Gem is for you.\r\n\r\n## CI\r\n\r\n[![Build Status](https://secure.travis-ci.org/robb1e/tracker-git.png)](http://travis-ci.org/robb1e/tracker-git)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'tracker-git'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install tracker-git\r\n\r\n## Usage\r\n\r\nThis gem will create a 'tracker' binary. Call that in your deploy script with the following environment variables set, and your finished stories will be updated to delivered.\r\n\r\n    export tracker_token=abc123\r\n    export tracker_project_id=123456\r\n\r\n## Known Issues\r\n\r\n- [Restarting stories](https://github.com/robb1e/tracker-git/issues/1)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-26466641-1","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Tracker-git","tagline":"Integrations with Pivotal Tracker based on current Git repository."}